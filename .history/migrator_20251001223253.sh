#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∏–≥—Ä–∞—Ç–æ—Ä SQL-—Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è PostgreSQL
# –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ2

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_NAME="migration_db"
DB_USER="postgres"
DB_HOST="localhost"
DB_PORT="5432"
MIGRATIONS_DIR="./migrations"
export PGPASSWORD="new_password123"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∏–∑ —Ñ–∞–π–ª–∞
run_sql() {
    local file="$1"
    echo "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∏–∑ —Ñ–∞–π–ª–∞: $file"
    psql -U "$DB_USER" -d "$DB_NAME" -h "$DB_HOST" -p "$DB_PORT" -f "$file"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ –§–∞–π–ª $file —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ $file"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL –∫–æ–º–∞–Ω–¥—ã
run_sql_c() {
    local sql="$1"
    psql -U "$DB_USER" -d "$DB_NAME" -h "$DB_HOST" -p "$DB_PORT" -t -c "$sql"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
check_db_connection() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    if run_sql_c "SELECT 1;" > /dev/null 2>&1; then
        echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ë–î"
        echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
        echo "  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
        echo "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $DB_USER"
        echo "  –•–æ—Å—Ç: $DB_HOST"
        echo "  –ü–æ—Ä—Ç: $DB_PORT"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –º–∏–≥—Ä–∞—Ü–∏–π
create_migrations_table() {
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã migrations (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)..."
    
    local create_table_sql="
    CREATE TABLE IF NOT EXISTS migrations (
        id SERIAL PRIMARY KEY,
        migration_name VARCHAR(255) UNIQUE NOT NULL,
        applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );"
    
    run_sql_c "$create_table_sql"
    echo "‚úÖ –¢–∞–±–ª–∏—Ü–∞ migrations –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
get_applied_migrations() {
    run_sql_c "SELECT migration_name FROM migrations ORDER BY applied_at;" | sed '/^$/d'
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
apply_migrations() {
    echo "–ù–∞—á–∞–ª–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π..."
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
    local applied_migrations
    applied_migrations=$(get_applied_migrations)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏
    if [ ! -d "$MIGRATIONS_DIR" ]; then
        echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π $MIGRATIONS_DIR –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 1
    fi
    
    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    local applied_count=0
    local skipped_count=0
    
    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ SQL —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for sql_file in "$MIGRATIONS_DIR"/*.sql; do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª (–∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –Ω–µ—Ç .sql —Ñ–∞–π–ª–æ–≤)
        if [ ! -f "$sql_file" ]; then
            continue
        fi
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ –ø—É—Ç–∏
        local migration_name
        migration_name=$(basename "$sql_file")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –º–∏–≥—Ä–∞—Ü–∏—è —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞
        if echo "$applied_migrations" | grep -q "^$migration_name$"; then
            echo "‚è≠Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏—è $migration_name —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
            ((skipped_count++))
        else
            echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: $migration_name"
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º SQL —Å–∫—Ä–∏–ø—Ç
            if run_sql "$sql_file"; then
                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –≤—Å—Ç–∞–≤–∫–∏ –≤ SQL
                local escaped_name
                escaped_name=$(printf "%q" "$migration_name")
                
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
                local insert_sql="INSERT INTO migrations (migration_name) VALUES ('$escaped_name');"
                if run_sql_c "$insert_sql"; then
                    echo "‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∏–≥—Ä–∞—Ü–∏–∏ $migration_name –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É migrations"
                    ((applied_count++))
                else
                    echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∏–≥—Ä–∞—Ü–∏–∏ $migration_name"
                fi
            else
                echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ $migration_name"
            fi
        fi
    done
    
    echo "=========================================="
    echo "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:"
    echo "–ü—Ä–∏–º–µ–Ω–µ–Ω–æ –Ω–æ–≤—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π: $applied_count"
    echo "–ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö): $skipped_count"
    echo "=========================================="
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–π
show_migration_status() {
    echo "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:"
    echo "=========================================="
    
    local applied_migrations
    applied_migrations=$(get_applied_migrations)
    
    if [ -z "$applied_migrations" ]; then
        echo "–ù–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π"
    else
        echo "–ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:"
        echo "$applied_migrations"
    fi
    
    echo "------------------------------------------"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏
    if [ -d "$MIGRATIONS_DIR" ]; then
        local available_migrations
        available_migrations=$(find "$MIGRATIONS_DIR" -name "*.sql" -exec basename {} \; | sort)
        
        if [ -z "$available_migrations" ]; then
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏: –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤ .sql –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $MIGRATIONS_DIR"
        else
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏:"
            echo "$available_migrations"
        fi
    else
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π $MIGRATIONS_DIR –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "=========================================="
    echo "   –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ú–ò–ì–†–ê–¢–û–† POSTGRESQL"
    echo "   –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ2"
    echo "=========================================="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    if ! check_db_connection; then
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –º–∏–≥—Ä–∞—Ü–∏–π
    create_migrations_table
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    show_migration_status
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    apply_migrations
    
    echo "‚úÖ –†–∞–±–æ—Ç–∞ –º–∏–≥—Ä–∞—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"